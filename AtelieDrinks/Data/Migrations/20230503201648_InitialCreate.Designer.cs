// <auto-generated />
using AtelieDrinks.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AtelieDrinks.Data.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20230503201648_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AtelieDrinks.Models.Base_alcoolica", b =>
                {
                    b.Property<decimal>("custo_garrafa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("custo_garrafa");

                    b.Property<decimal>("custo_total")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("custo_total");

                    b.Property<int>("id_base_alcoolica")
                        .HasColumnType("int")
                        .HasColumnName("id_base_alcoolica");

                    b.Property<string>("nome_bebida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome_bebida");

                    b.Property<string>("nome_marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome_marca");

                    b.Property<int>("quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.ToTable("Base_alcoolica");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Custo_deslocamento", b =>
                {
                    b.Property<decimal>("custo_tipo_deslocamento")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("custo_tipo_deslocamento");

                    b.Property<int>("id_taxa_deslocamento")
                        .HasColumnType("int")
                        .HasColumnName("id_taxa_deslocamento");

                    b.Property<string>("tipo_deslocamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tipo_deslocamento");

                    b.Property<decimal>("valor_tipo_deslocamento")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_tipo_deslocamento");

                    b.ToTable("Custo_deslocamento");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Custo_operacional", b =>
                {
                    b.Property<int>("custo_balcoes")
                        .HasColumnType("int")
                        .HasColumnName("custo_balcoes");

                    b.Property<int>("custo_coordenador")
                        .HasColumnType("int")
                        .HasColumnName("custo_coordenador");

                    b.Property<int>("custo_impostos_federais")
                        .HasColumnType("int")
                        .HasColumnName("custo_impostos_federais");

                    b.Property<int>("custo_operacional")
                        .HasColumnType("int")
                        .HasColumnName("custo_operacional");

                    b.Property<decimal>("custo_profissionais_gerais")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("custo_profissionais_gerais ");

                    b.Property<int>("custo_seguro_reserva")
                        .HasColumnType("int")
                        .HasColumnName("custo_seguro_reserva");

                    b.Property<int>("custo_taxa_deslocamento")
                        .HasColumnType("int")
                        .HasColumnName("custo_taxa_deslocamento");

                    b.Property<int>("custo_taxa_operalizacao")
                        .HasColumnType("int")
                        .HasColumnName("custo_taxa_operalizacao");

                    b.Property<int>("custo_transporte")
                        .HasColumnType("int")
                        .HasColumnName("custo_transporte");

                    b.Property<int>("id_custo_operacional")
                        .HasColumnType("int")
                        .HasColumnName("id_custo_operacional");

                    b.Property<int>("qtd_balcoes")
                        .HasColumnType("int")
                        .HasColumnName("qtd_balcoes");

                    b.Property<int>("qtd_coordenador")
                        .HasColumnType("int")
                        .HasColumnName("qtd_coordenador");

                    b.Property<int>("qtd_impostos_federais")
                        .HasColumnType("int")
                        .HasColumnName("qtd_impostos_federais");

                    b.Property<int>("qtd_profissionais_gerais")
                        .HasColumnType("int")
                        .HasColumnName("qtd_profissionais_gerais");

                    b.Property<int>("qtd_seguro_reserva")
                        .HasColumnType("int")
                        .HasColumnName("qtd_seguro_reserva");

                    b.Property<int>("qtd_taxa_deslocamento")
                        .HasColumnType("int")
                        .HasColumnName("qtd_taxa_deslocamento");

                    b.Property<int>("qtd_taxa_operalizacao")
                        .HasColumnType("int")
                        .HasColumnName("qtd_taxa_operalizacao");

                    b.Property<int>("qtd_transporte")
                        .HasColumnType("int")
                        .HasColumnName("qtd_transporte");

                    b.ToTable("Custo Operacional");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Deposito", b =>
                {
                    b.Property<decimal>("custo_tecnico")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("custo_deposito");

                    b.Property<string>("descricao_observacao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao_observacao");

                    b.Property<int>("id_item")
                        .HasColumnType("int")
                        .HasColumnName("id_item");

                    b.Property<string>("medida_de_armazenamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("medida_de_armazenamento");

                    b.Property<string>("nome_item")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome_item");

                    b.Property<int>("quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.Property<string>("setor_armazenamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("setor_armazenamento");

                    b.ToTable("Deposito");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Drinks", b =>
                {
                    b.Property<decimal>("custo_tecnico")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("custo_tecnico");

                    b.Property<int>("id_drink")
                        .HasColumnType("int")
                        .HasColumnName("id_drink");

                    b.Property<string>("ingredientes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ingredientes");

                    b.Property<string>("nome_drink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome_drink");

                    b.Property<int>("quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Ficha_tecnica", b =>
                {
                    b.Property<decimal>("custo_base_alcoolica")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("custo_base_alcoolica");

                    b.Property<decimal>("custo_insumo")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("custo_insumo");

                    b.Property<int>("id_ficha")
                        .HasColumnType("int")
                        .HasColumnName("id_ficha");

                    b.Property<int>("medida")
                        .HasColumnType("int")
                        .HasColumnName("medida");

                    b.Property<decimal>("ml_unidade")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ml_unidade");

                    b.Property<string>("nome_base_alcoolica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome_base_alcoolica");

                    b.Property<string>("nome_drink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome_drink");

                    b.Property<string>("nome_insumo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome_insumo");

                    b.Property<decimal>("valor_ficha")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_ficha");

                    b.ToTable("Ficha Tecnica");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Historico", b =>
                {
                    b.Property<decimal>("base_orcamento")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("base_orcamento");

                    b.Property<decimal>("comissao_comercial")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("comisao_comercial");

                    b.Property<decimal>("comissao_gerencia")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("comisao_gerencia");

                    b.Property<decimal>("custo_operacional")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("custo_operacional");

                    b.Property<decimal>("custo_por_pessoa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("custo_por_pessoa");

                    b.Property<decimal>("custo_total")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("custo_total");

                    b.Property<decimal>("custo_total_insumos")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("custo_total_insumos");

                    b.Property<int>("id_historico")
                        .HasColumnType("int")
                        .HasColumnName("id_historico");

                    b.Property<decimal>("margem_negociacao")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("margem_negociacao");

                    b.Property<int>("numero_pessoas")
                        .HasColumnType("int")
                        .HasColumnName("numero_pessoas");

                    b.Property<decimal>("previsao_lucro")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("previsao_lucro");

                    b.Property<int>("qtde_convidados")
                        .HasColumnType("int")
                        .HasColumnName("qtde_convidados");

                    b.Property<int>("qtde_drinks")
                        .HasColumnType("int")
                        .HasColumnName("qtde_drinks");

                    b.Property<decimal>("valor_arredondado_pra_cima")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_arredondado_pra_cima");

                    b.Property<decimal>("valor_orcamento")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_orcamento");

                    b.Property<decimal>("valor_primario")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_primario");

                    b.ToTable("Historico");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Insumos", b =>
                {
                    b.Property<decimal>("custo_insumo")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("custo_insumo");

                    b.Property<int>("id_insumo")
                        .HasColumnType("int")
                        .HasColumnName("id_insumo");

                    b.Property<string>("nome_insumo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome_insumo");

                    b.Property<int>("quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.ToTable("Insumos");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Marca", b =>
                {
                    b.Property<decimal>("custo_garrafa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("custo_garrafa");

                    b.Property<int>("id_bebida")
                        .HasColumnType("int")
                        .HasColumnName("id_bebida");

                    b.Property<int>("id_marca")
                        .HasColumnType("int")
                        .HasColumnName("id_marca");

                    b.Property<string>("nome_bebida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome_bebida");

                    b.Property<string>("nome_marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome_marca");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Orcamento", b =>
                {
                    b.Property<decimal>("base_orcamento")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("base_orcamento");

                    b.Property<decimal>("comissao_comercial")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("comisao_comercial");

                    b.Property<decimal>("comissao_gerencia")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("comisao_gerencia");

                    b.Property<decimal>("custo_operacional")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("custo_operacional");

                    b.Property<decimal>("custo_por_pessoa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("custo_por_pessoa");

                    b.Property<decimal>("custo_total")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("custo_total");

                    b.Property<decimal>("custo_total_insumos")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("custo_total_insumos");

                    b.Property<int>("id_orcamento")
                        .HasColumnType("int")
                        .HasColumnName("id_orcamento");

                    b.Property<decimal>("margem_negociacao")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("margem_negociacao");

                    b.Property<int>("numero_pessoas")
                        .HasColumnType("int")
                        .HasColumnName("numero_pessoas");

                    b.Property<decimal>("previsao_lucro")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("previsao_lucro");

                    b.Property<int>("qtde_convidados")
                        .HasColumnType("int")
                        .HasColumnName("qtde_convidados");

                    b.Property<int>("qtde_drinks")
                        .HasColumnType("int")
                        .HasColumnName("qtde_drinks");

                    b.Property<decimal>("valor_arredondado_pra_cima")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_arredondado_pra_cima");

                    b.Property<decimal>("valor_orcamento")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_orcamento");

                    b.Property<decimal>("valor_primario")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_primario");

                    b.ToTable("Orcamento");
                });
#pragma warning restore 612, 618
        }
    }
}
